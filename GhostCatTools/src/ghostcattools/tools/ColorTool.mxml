<?xml version="1.0" encoding="utf-8"?>
<components:GCToolWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
						 xmlns:s="library://ns.adobe.com/flex/spark" enabledDragOpen="false" title="色彩工具"
						 xmlns:mx="library://ns.adobe.com/flex/mx"
						 xmlns:components="ghostcattools.components.*" 
						 xmlns:toolscomponents="ghostcattools.tools.components.*"
						 xmlns:color="mx.controls.colorPickerClasses.*"
						 width="316" height="378" showStatusBar="false" close="gctoolwindow1_closeHandler(event)">
	<fx:Script>
		<![CDATA[
			import flash.filters.ColorMatrixFilter;
			
			import ghostcattools.util.FileControl;
			
			import mx.events.FlexEvent;
			
			[Embed(source="../asset/picture1.jpg")]
			[Bindable]
			public var p1:Class;
			[Embed(source="../asset/picture2.jpg")]
			[Bindable]
			public var p2:Class;
			[Embed(source="../asset/picture3.jpg")]
			[Bindable]
			public var p3:Class;
			[Embed(source="../asset/picture4.jpg")]
			[Bindable]
			public var p4:Class;
			
			protected function gctoolwindow1_closeHandler(event:Event):void
			{
				colorPicker.dispose();
			}
			
			private function tranformString(v:ColorTransform):String
			{
				if (!v)
					v = new ColorTransform();
				
				return "new ColorTransform(" + [v.redMultiplier,v.greenMultiplier,v.blueMultiplier,v.alphaMultiplier,v.redOffset,v.greenOffset,v.blueOffset,v.alphaOffset].join(",") + ")";
			}
			
			private function filterString(v:ColorMatrixFilter):String
			{
				if (!v)
					v = new ColorMatrixFilter();
				
				var result:Array = [];
				for (var i:int = 0;i < v.matrix.length;i++)
					result[i] = Number(Number(v.matrix[i]).toFixed(2));
				
				return "new ColorMatrixFilter([" + result.join(",") + "])";
			}
			
			protected function colorImg_clickHandler(event:MouseEvent):void
			{
				const images:Array = [p1,p2,p3,p4];
				var image:SWFLoader = event.currentTarget as SWFLoader;
				var index:int =  images.indexOf(image.source);
				if (index == 3)
					index = 0;
				else
					index++;
				
				image.source = images[index];
			}
			
			
			protected function colorImg_creationCompleteHandler(event:FlexEvent):void
			{
				FileControl.dragFileIn(openImageHandler,this.colorImg,["jpg","jpeg","gif","png","swf","svg","bmp"]);
				function openImageHandler(files:Array):void
				{
					var file:File = files[0] as File;
					colorImg.source = file.nativePath;
				}
				
			}
			
			protected function colorImg2_creationCompleteHandler(event:FlexEvent):void
			{
				FileControl.dragFileIn(openImageHandler,this.colorImg2,["jpg","jpeg","gif","png","swf","svg","bmp"]);
				function openImageHandler(files:Array):void
				{
					var file:File = files[0] as File;
					colorImg2.source = file.nativePath;
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<mx:TabNavigator top="5" bottom="5" left="5" right="5" paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5">
		<s:NavigatorContent label="色彩选择">
			<components:ColorPicker id="colorPicker"/>
		</s:NavigatorContent>
		<s:NavigatorContent label="色彩转换">
			<s:SWFLoader id="colorImg" x="0" y="0" width="200" height="160" source="{p1}" toolTip="点击或者拖动图片到此处可更换预览图"
						 click="colorImg_clickHandler(event)" creationComplete="colorImg_creationCompleteHandler(event)"/>
			<s:TextArea x="0" y="166" width="200" height="36" editable="false"
						text="{tranformString(colorTranformPicker.result)}"/>
			<toolscomponents:ColorTranformPicker id="colorTranformPicker" x="0" y="207" 
												 change="colorImg.transform.colorTransform = colorTranformPicker.result"/>
			<s:Rect x="204" y="0" width="92" height="334">
				<s:fill>
					<s:SolidColor/>
				</s:fill>
			</s:Rect>
			<s:RichText x="295" y="5" fontSize="50" lineHeight="40" rotationZ="90" color="#FFFFFF"
						text="COLOR&#xa;TRANSFORM"/>
		</s:NavigatorContent>
		<s:NavigatorContent label="色彩滤镜">
			<s:SWFLoader id="colorImg2" x="0" y="0" width="200" height="160" source="{p2}" toolTip="点击或者拖动图片到此处可更换预览图"
					 click="colorImg_clickHandler(event)" creationComplete="colorImg2_creationCompleteHandler(event)"/>
			<s:TextArea x="0" y="166" width="200" height="55" editable="false"
						text="{filterString(colorFilterPicker.result)}"/>
			<toolscomponents:ColorFilterPicker id="colorFilterPicker" x="0" y="230" height="113"
											   change="colorImg2.filters = [colorFilterPicker.result]"/>
			<s:Rect x="204" y="0" width="92" height="334">
				<s:fill>
					<s:SolidColor/>
				</s:fill>
			</s:Rect>
			<s:RichText x="295" y="5" color="#FFFFFF" fontSize="50" lineHeight="40" rotationZ="90"
						text="COLOR&#xa;MATRIXFILTER"/>
		</s:NavigatorContent>
	</mx:TabNavigator>
</components:GCToolWindow>
