<?xml version="1.0" encoding="utf-8"?>
<components:GCToolWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
						 xmlns:s="library://ns.adobe.com/flex/spark" isDirectory="true" showStatusBar="false" title="代码统计"
						 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:components="ghostcattools.components.*" width="629" height="394">

	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import ghostcat.util.core.Asyn;
			
			import ghostcattools.util.FileControl;
			
			import mx.collections.ArrayCollection;
			import mx.effects.easing.Elastic;
			import mx.utils.StringUtil;
			
			private const extensions:Array = ["as","mxml"];
			
			[Bindable]
			public var fileList:Array;
			
			[Bindable]
			public var totalCodeLength:int;
			
			[Bindable]
			public var totalFileLength:int;
			
			private var directoryListerNum:int = 0;//正在等待查询目录返回的事件数量
			
			private function directoryListingHandler(event:FileListEvent):void
			{
				var list:Array = event.files;
				File(event.currentTarget).removeEventListener(FileListEvent.DIRECTORY_LISTING,directoryListingHandler);
				
				for each (var child:File in list)
					this.searchFileAndAdd(child);
				
				directoryListerNum--;
				if (directoryListerNum == 0)
					Asyn.asynFor(readFileHandler,0,this.fileList.length,readFileCompleteHandler);
			}
			
			private function searchFileAndAdd(file:File):void
			{
				if (file.isDirectory)
				{
					directoryListerNum++;
					file.getDirectoryListingAsync();
					file.addEventListener(FileListEvent.DIRECTORY_LISTING,directoryListingHandler);
				}
				else
				{
					if (extensions.indexOf(file.extension) != -1)
						fileList.push(file);
				}
			}
			
			public override function openFileHandler(files:Array):void
			{
				var file:File = files[0] as File;
				
				this.progressBar.label = file.nativePath;
				
				this.fileList = [];
				
				this.chartData1.value = 0;
				this.chartData2.value = 0;
				this.chartData3.value = 0;
				this.chartData4.value = 0;
				this.chartData5.value = 0;
				this.chartData6.value = 0;
				this.chartData7.value = 0;
				this.chartData8.value = 0;
				
				this.totalCodeLength = 0;
				this.totalFileLength = 0;
				
				this.chartDataGroup1.refresh();
				this.chartDataGroup2.refresh();
				
				this.progressBar.setProgress(0,this.fileList.length);
				
				Asyn.autoSetInv(stage);
				
				setTimeout(searchFileAndAdd,0,file);
			}
			
			private function readFileHandler(i:int):void
			{
				var file:File = this.fileList[i] as File;
				var bytes:ByteArray = FileControl.readFile(file);
				var text:String = bytes.toString();
				var list:Array = text.split("\n");
				
				for each (var str:String in list)
				{
					if (new RegExp("^\\s*(//|/\\*|\\*)","m").test(str))
					{
						this.chartData4.value++;
					}
					else
					{
						var short:String = StringUtil.trim(str);
						if (short.length == 0)
							this.chartData3.value++;
						else if (short.length == 1)
							this.chartData2.value++;
						else
							this.chartData1.value++;
					}
				}
				
				this.totalCodeLength += list.length;
				
				if (list.length < 100)
					this.chartData5.value++;
				else if (list.length < 500)
					this.chartData6.value++;
				else if (list.length < 2000)
					this.chartData7.value++;
				else
					this.chartData8.value++;
				
				this.totalFileLength ++;
				this.chartDataGroup1.refresh();
				this.chartDataGroup2.refresh();
				
				this.progressBar.setProgress(i,this.fileList.length);
			}
			
			private function readFileCompleteHandler():void
			{
				var v:int = this.fileList.length ? this.fileList.length : 1;
				progressBar.setProgress(v,v);
			}
			
			private function pieSeriesLabelFunction(item:Object, field:String, index:Number, percentValue:Number):String
			{ 
				return item.name + ":" + item.value + "\n(占全部的" + percentValue.toFixed(2) + "%)"; 
			} 
			
			protected function openBN_clickHandler(event:MouseEvent):void
			{
				FileControl.browseForDirectory(openFileHandler,"选择一个目录");
			}
		
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:ArrayCollection id="chartDataGroup1">
			<fx:Object id="chartData1" name="有效行数量"/>
			<fx:Object id="chartData2" name="单字符行数量"/>
			<fx:Object id="chartData3" name="空白行数量"/>
			<fx:Object id="chartData4" name="注释行数量"/>
		</s:ArrayCollection>
		<s:ArrayCollection id="chartDataGroup2">
			<fx:Object id="chartData5" name="100行以下"/>
			<fx:Object id="chartData6" name="100至500行"/>
			<fx:Object id="chartData7" name="500至2000行"/>
			<fx:Object id="chartData8" name="2000行以上"/>
		</s:ArrayCollection>
	</fx:Declarations>

	<s:Label id="urlText" x="84" y="10" width="269" text="点击“浏览”按钮或者拖动文件到此窗口" visible="{!fileList}"/>
	<mx:ProgressBar id="progressBar" visible="{fileList}" label="" y="7" left="80" right="5"
					labelPlacement="center" mode="manual"/>
	<s:Button id="openBN" x="5" y="5" label="浏览" click="openBN_clickHandler(event)"/>
	<mx:TabNavigator left="5" right="5" top="30" bottom="5" paddingTop="0" creationPolicy="all">
		<s:NavigatorContent width="100%" height="100%" label="统计行">
			<s:Label y="6" horizontalCenter="0" text="代码总行数：{totalCodeLength}" textAlign="center" visible="{fileList}"/>
			<mx:PieChart id="piechart" left="0" right="0" top="20" bottom="0" dataProvider="{chartDataGroup1}">
				<mx:series>
					<components:BevelPieSeries field="value" nameField="name" labelFunction="pieSeriesLabelFunction"/>
				</mx:series>
			</mx:PieChart>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="统计文件">
			<s:Label y="6" horizontalCenter="0" text="文件数量：{totalFileLength}" textAlign="center" visible="{fileList}"/>
			<mx:PieChart id="piechart2" left="0" right="0" top="20" bottom="0" dataProvider="{chartDataGroup2}">
				<mx:series>
					<components:BevelPieSeries field="value" nameField="name" labelFunction="pieSeriesLabelFunction"/>
				</mx:series>
			</mx:PieChart>
		</s:NavigatorContent>
	</mx:TabNavigator>
</components:GCToolWindow>
