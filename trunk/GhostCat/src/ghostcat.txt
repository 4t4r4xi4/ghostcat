主要功能点

framework

这是一个基础的可视对象framework，采用类似FLEX的延迟更新机制，实现了一些基本的优化处理以及基础功能。这将会为新功能的开发提供不少便利。
提供了大量实用类，涵盖到颜色，矩阵转换，位图缓存，文本处理，反射管理，滤镜代理，字体，事件，鼠标，声音，拖拽，为许多开发中的难点提供了标准解决方案。
内置一个和TweenLite类似的缓动模块。

GMovieClipBase

对电影剪辑处理的抽象类，以帧标签为处理单位，可以方便地将动画拼接循环播放，实现复杂动画的简单处理，尤其适用于八方向行走起步转身等连贯动作。
实现了游戏必须的恒定速率（跳帧）功能。
此类为抽象类，它的两个实体类，GMovieClip，GBitmapMovieClip则分别实现了对普通矢量动画以及位图数组动画的统一处理。

GRepeater

泛用化的动态显示模块，将元素平铺在一个区域内进行动态的增删，以模拟超大范围的重复图元。您可以将他作为地图格子使用，也可以用做一些需要进行不断重复显示的背景图片上。
它采用事件进行元素的更新，使用直观便利，且较易进行扩展，甚至可以用来实现组件List。
它的派生类GRepeater45则实现了游戏常用的45度角游戏地图功能。

Collision

另类的碰撞检测模块。使用图形表达的“圆形”和“矩形”作为碰撞的标准，以这些基本图形来拼接出物品不规则的外型，以此代替速度较慢的位图判断方式。

Queue

简单易用的队列系统，很容易进行扩展。它可以实现资源加载，方法执行的混合队列模式，以实现类似原来的同步的处理方式。甚至可以在里面加入条件判断和循环。
依赖它和FilterProxy实现了内置Tween的排队播放和对滤镜的支持，拉近了和TweenMax功能上的距离。
依赖它实现了QUEST系统，大量采用了反射，在牺牲一定可定制性的同时大幅度简化了使用。（未完成）

XML解析器（未完成）

通用型的XML转换器，不做任何修改就可以适用于大部分反序列化的情况。可重新定制解析器，但一般都是在进行使用上的简化。

松散UI（未完成）

这是一个可以自由addChild到任何可视容器上的UI组件库。Cursor和ToolTip只需要addChild到舞台上即可生效，使用方便，可定制程度高。实现了多语言系统。
组件倾向于替换原有图元上的图形来实现组件皮肤，尽可能快速地表示出美工设计稿上的内容，但也不排斥原有的皮肤方式。
目前此部分还处于初级开发阶段。

杂项

A*，SWF解析，Graphics对象化，FPS，拖拽点，单文件自加载等等。