<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/halo" width="400" height="300">

	<mx:HDividedBox width="100%" height="100%">
		<mx:List id="list" width="150" height="100%" dataProvider="{symbolList}" change="list_changeHandler(event)"/>
		<mx:TabNavigator historyManagementEnabled="false" width="100%" height="100%" paddingTop="0" creationPolicy="all">
			<mx:Canvas id="imageCanvas" label="图象" width="100%" height="100%">
				<mx:Image id="image"/>
			</mx:Canvas>
			<mx:Canvas id="treeCanvas" label="结构" width="100%" height="100%">
				<mx:Tree id="tree" width="100%" height="100%" labelFunction="treeLabelFuntion"/>
			</mx:Canvas>
		</mx:TabNavigator>
	</mx:HDividedBox>
	
	<fx:Script>
		<![CDATA[
			import org.ghostcat.util.DisplayUtil;
			import org.ghostcat.parse.DisplayParse;
			import org.ghostcat.util.Geom;
			import mx.events.ListEvent;
			import mx.collections.ArrayCollection;
			import org.ghostcat.fileformat.swf.tag.SymbolClassTag;
			import org.ghostcat.fileformat.swf.SWFDecoder;
			
			private var _source:ByteArray;
			
			private var loader:Loader = new Loader();
			
			
			[Bindable]
			private var symbolList:ArrayCollection;
			
			[Bindable]
			public function get source():ByteArray
			{
				return _source;
			}

			public function set source(v:ByteArray):void
			{
				_source = v;
				
				if (v)
				{
					loader.loadBytes(v);
					
					var swf:SWFDecoder = new SWFDecoder();
					swf.read(v);
					var a:SymbolClassTag = swf.getTags(SymbolClassTag)[0];
					symbolList = new ArrayCollection(a.symbolClasses);
				}
			}
			
			protected function list_changeHandler(event:ListEvent):void
			{
				SoundMixer.stopAll();
				
				var c:Class;
				if (loader.content)
					c = loader.contentLoaderInfo.applicationDomain.getDefinition(list.selectedItem.toString()) as Class
				else
					return;
				
				var o:Object = new c();
				
				if (o is DisplayObject)
				{
					var displayObj:DisplayObject = o as DisplayObject;
					image.source = displayObj;
				
					var rect:Rectangle = displayObj.getRect(displayObj);
					image.x = Math.max(0,(imageCanvas.width - rect.width)/2 - rect.x);
					image.y = Math.max(0,(imageCanvas.height - rect.height)/2 - rect.y);
					
					
					//绘制注册点
					var sh:Shape = new Shape();
					
					sh.graphics.lineStyle(0,0);
					sh.graphics.moveTo(-5,0);
					sh.graphics.lineTo(5,0);
					sh.graphics.moveTo(0,-5);
					sh.graphics.lineTo(0,5);
					sh.graphics.endFill();
					sh.blendMode = BlendMode.INVERT;
					
					image.addChild(sh);
					
					tree.dataProvider = DisplayUtil.getChildTree(displayObj);
				}
				else if (o is Sound)
				{
					(o as Sound).play();
				}
				else if (o is BitmapData)
				{
					image.source = o;
				}
			}
			
			private function treeLabelFuntion(item:Object):String
			{
				var xml:XML = (item as XML).copy();
				delete xml.*;
				return xml.toXMLString();
			}

		]]>
	</fx:Script>
</s:HGroup>
