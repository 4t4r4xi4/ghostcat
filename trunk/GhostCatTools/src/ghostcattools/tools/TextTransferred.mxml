<?xml version="1.0" encoding="utf-8"?>
<components:GCToolWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
						 xmlns:s="library://ns.adobe.com/flex/spark" showStatusBar="false" title="文本转义" enabledDragOpen="false"
						 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:components="ghostcattools.components.*" width="484" height="378" creationComplete="gctoolwindow1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import ghostcat.util.text.ANSI;
			import ghostcat.util.text.TextTransferUtil;
			
			import ghostcattools.util.FileControl;
			
			import mx.collections.ArrayCollection;
			import mx.controls.TextArea;
			import mx.events.FlexEvent;
			
			import spark.components.RichEditableText;
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			[Bindable]
			public var typeList:ArrayCollection = new ArrayCollection(["UTF8文本","ANSI文本","UTF8 URL转义","ANSI URL转义","XML转义","字符串转义"]);
			
			[Bindable]
			public var transferDown:Boolean = true;
			public override function openFileHandler(files:Array):void
			{
				if (!files)
					return;
				
				var file:File = files[0] as File;
				
				input.text = FileControl.readFile(file).toString();
				this.transferDown = true;
				textTransfer()
			}
			
			public function openFileHandler2(files:Array):void
			{
				if (!files)
					return;
				
				var file:File = files[0] as File;
				
				output.text = FileControl.readFile(file).toString();
				this.transferDown = false;
				textTransfer()
			}
			
			protected function gctoolwindow1_creationCompleteHandler(event:FlexEvent):void
			{
				FileControl.dragFileIn(openFileHandler,input);
				FileControl.dragFileIn(openFileHandler2,output);
			}
			
			protected function inputBox_changeHandler(event:Event):void
			{
				textTransfer()
			}
			
			protected function outputBox_changeHandler(event:Event):void
			{
				textTransfer()
			}
			
			protected function input_changeHandler(event:TextOperationEvent):void
			{
				this.transferDown = true;
				textTransfer()
			}
			
			protected function output_changeHandler(event:TextOperationEvent):void
			{
				this.transferDown = false;
				textTransfer()
			}
			
			protected function transferDownHandler(event:MouseEvent):void
			{
				this.transferDown = !this.transferDown;
			}
			
			private function textTransfer():void
			{
				function emptyFun(str:String):String
				{
					return str;
				}
				
				const decodeFuns:Array = [emptyFun,ANSI.ANSIToUnicode,unescape,ANSI.unescapeFromANSI,TextTransferUtil.XMLDecode,TextTransferUtil.stringEncode];
				const encodeFuns:Array = [emptyFun,ANSI.unicodeToANSI,escape,ANSI.escapeByANSI,TextTransferUtil.XMLEncode,TextTransferUtil.stringDecode];
				
				if (transferDown)
					output.text = encodeFuns[outputBox.selectedIndex](decodeFuns[inputBox.selectedIndex](input.text));
				else
					input.text = encodeFuns[inputBox.selectedIndex](decodeFuns[outputBox.selectedIndex](output.text));
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Group top="0" width="100%" height="50%">
		<s:ComboBox id="inputBox" x="5" y="5" dataProvider="{typeList}" selectedIndex="0" change="inputBox_changeHandler(event)"/>
		<s:ToggleButton right="5" y="5" label="转换↓" click="transferDownHandler(event)" selected="{transferDown}"/>
		<s:TextArea id="input"  left="5" right="5" bottom="5" top="30" change="input_changeHandler(event)"/>
	</s:Group>
	<s:Group bottom="0" width="100%" height="50%">
		<s:ComboBox id="outputBox" x="5" y="5" dataProvider="{typeList}" selectedIndex="1" change="inputBox_changeHandler(event)"/>
		<s:ToggleButton right="5" y="5" label="转换↑" click="transferDownHandler(event)" selected="{!transferDown}"/>
		<s:TextArea id="output" left="5" right="5" bottom="5" top="30" change="output_changeHandler(event)"/>
	</s:Group>
	
</components:GCToolWindow>
